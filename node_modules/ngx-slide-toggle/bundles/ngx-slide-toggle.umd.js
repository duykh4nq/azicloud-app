(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/common'], factory) :
	(factory((global.ngxSlideToggle = {}),global.ng.core,global.ng.common));
}(this, (function (exports,core,common) { 'use strict';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var nextUniqueId = 0;
var MaterialToggleComponent = (function () {
    function MaterialToggleComponent() {
        this._uniqueId = "material-slide-toggle-" + ++nextUniqueId;
        this.name = null;
        this.id = this._uniqueId;
        // tslint:disable:no-input-rename
        this.ariaLabel = null;
        this.ariaLabelledby = null;
        this.change = new core.EventEmitter();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    MaterialToggleComponent.prototype.onChange = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.stopPropagation();
        this.change.emit(this.inputElement.nativeElement.checked);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    MaterialToggleComponent.prototype.onClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.stopPropagation();
    };
    MaterialToggleComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'material-slide-toggle',
                    template: "\n    <div class=\"material-switch\">\n      <input #materialSlideToggle [id]=\"id\" [attr.name]=\"name\" type=\"checkbox\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledby\"\n        (click)=\"onClick($event)\" (change)=\"onChange($event)\" [checked]=\"checked\" [disabled]=\"disabled\" [class.disabled]=\"disabled\"\n      />\n      <label [attr.for]=\"id\" [class.disabled]=\"disabled\" class=\"label-primary\"></label>\n    </div>\n  ",
                    styles: ["\n    .material-switch {\n      display: inline-flex;\n      margin: 1em;\n      vertical-align: middle;\n      width: auto;\n    }\n\n    .material-switch>input[type=\"checkbox\"] {\n      display: none;\n    }\n\n    .material-switch>label {\n      cursor: pointer;\n      height: 0px;\n      position: relative;\n      width: 40px;\n    }\n\n    .material-switch>label::before {\n      background: #000000;\n      box-shadow: inset 0px 0px 10px rgba(0, 0, 0, 0.5);\n      border-radius: 8px;\n      content: '';\n      height: 16px;\n      margin-top: -8px;\n      position: absolute;\n      opacity: 0.3;\n      transition: all 0.4s ease-in-out;\n      width: 40px;\n    }\n\n    .material-switch>label::after {\n      background: #ffffff;\n      border-radius: 16px;\n      box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.3);\n      content: '';\n      height: 24px;\n      left: -4px;\n      margin-top: -8px;\n      position: absolute;\n      top: -4px;\n      transition: all 0.3s ease-in-out;\n      width: 24px;\n    }\n\n    .material-switch>input[type=\"checkbox\"]:checked+label::before {\n      background: #3f51b5;\n      opacity: 0.5;\n    }\n\n    .material-switch>input[type=\"checkbox\"]:checked+label::after {\n      background: #3f51b5;\n      left: 20px;\n    }\n\n    .disabled {\n      cursor: default;\n    }\n  "]
                },] },
    ];
    /** @nocollapse */
    MaterialToggleComponent.ctorParameters = function () { return []; };
    MaterialToggleComponent.propDecorators = {
        "name": [{ type: core.Input },],
        "id": [{ type: core.Input },],
        "checked": [{ type: core.Input },],
        "disabled": [{ type: core.Input },],
        "ariaLabel": [{ type: core.Input, args: ['aria-label',] },],
        "ariaLabelledby": [{ type: core.Input, args: ['aria-labelledby',] },],
        "change": [{ type: core.Output },],
        "inputElement": [{ type: core.ViewChild, args: ['materialSlideToggle',] },],
    };
    return MaterialToggleComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var SlideToggleModule = (function () {
    function SlideToggleModule() {
    }
    SlideToggleModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: [common.CommonModule],
                    declarations: [MaterialToggleComponent],
                    exports: [MaterialToggleComponent]
                },] },
    ];
    /** @nocollapse */
    SlideToggleModule.ctorParameters = function () { return []; };
    return SlideToggleModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */

exports.MaterialToggleComponent = MaterialToggleComponent;
exports.SlideToggleModule = SlideToggleModule;

Object.defineProperty(exports, '__esModule', { value: true });

})));
